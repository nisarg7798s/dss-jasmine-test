/*
 * This file is generated by jOOQ.
 */
package com.nisarg.database.tables;


import com.nisarg.database.Indexes;
import com.nisarg.database.Keys;
import com.nisarg.database.Public;
import com.nisarg.database.tables.records.AdrightsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Adrights extends TableImpl<AdrightsRecord> {

    private static final long serialVersionUID = 1874067473;

    /**
     * The reference instance of <code>public.adrights</code>
     */
    public static final Adrights ADRIGHTS = new Adrights();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AdrightsRecord> getRecordType() {
        return AdrightsRecord.class;
    }

    /**
     * The column <code>public.adrights.id</code>.
     */
    public final TableField<AdrightsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.adrights.al_id</code>.
     */
    public final TableField<AdrightsRecord, String> AL_ID = createField("al_id", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>public.adrights.text</code>.
     */
    public final TableField<AdrightsRecord, String> TEXT = createField("text", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.adrights.type</code>.
     */
    public final TableField<AdrightsRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * Create a <code>public.adrights</code> table reference
     */
    public Adrights() {
        this(DSL.name("adrights"), null);
    }

    /**
     * Create an aliased <code>public.adrights</code> table reference
     */
    public Adrights(String alias) {
        this(DSL.name(alias), ADRIGHTS);
    }

    /**
     * Create an aliased <code>public.adrights</code> table reference
     */
    public Adrights(Name alias) {
        this(alias, ADRIGHTS);
    }

    private Adrights(Name alias, Table<AdrightsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Adrights(Name alias, Table<AdrightsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Adrights(Table<O> child, ForeignKey<O, AdrightsRecord> key) {
        super(child, key, ADRIGHTS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ADRIGHTS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AdrightsRecord> getPrimaryKey() {
        return Keys.ADRIGHTS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AdrightsRecord>> getKeys() {
        return Arrays.<UniqueKey<AdrightsRecord>>asList(Keys.ADRIGHTS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Adrights as(String alias) {
        return new Adrights(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Adrights as(Name alias) {
        return new Adrights(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Adrights rename(String name) {
        return new Adrights(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Adrights rename(Name name) {
        return new Adrights(name, null);
    }
}
